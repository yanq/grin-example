${ packageName ? "package " + packageName : '' }

import groovy.util.logging.Slf4j
import grin.web.Controller

/**
 * ${simpleName}
 * something about this controller
 */
@Slf4j
class ${simpleName}Controller extends Controller {
    def index() {
        params.limit = params.limit ? params.limit.toInteger() : 10
        params.order = params.order ?: 'id desc'

        def list = ${simpleName}.list(params)
        def count = ${simpleName}.count()

        list.fetch()

        render('index', [list: list, count: count])
    }

    def show() {
        ${simpleName} ${propertyName} = ${simpleName}.get(params.id)

        if (!${propertyName}) {
            notFound()
            return
        }

        ${propertyName}.fetch()

        render('show', [${propertyName}: ${propertyName}])
    }

    def create() {
        ${simpleName} ${propertyName} = ${simpleName}.from(params)
        render('create', [${propertyName}: ${propertyName}])
    }

    def save() {
        ${simpleName} ${propertyName} = ${simpleName}.from(params)
        ${propertyName}.validate()

        if (${propertyName}.errors) {
            render('create', [${propertyName}: ${propertyName}])
        } else {
            if (${propertyName}.save()) {
                redirect("show/\${${propertyName}.id}")
            } else {
                render('create', [${propertyName}: ${propertyName}])
            }
        }
    }

    def edit() {
        ${simpleName} ${propertyName} = ${simpleName}.get(params.id)

        if (!${propertyName}) {
            notFound()
            return
        }

        render('edit', [${propertyName}: ${propertyName}])
    }

    def update() {
        ${simpleName} ${propertyName} = ${simpleName}.get(params.id)

        if (!${propertyName}) {
            notFound()
            return
        }

        ${propertyName}.bind(params)
        ${propertyName}.validate()

        if (${propertyName}.errors) {
            render('edit', [${propertyName}: ${propertyName}])
        } else {
            if (${propertyName}.save()) {
                redirect("show/\${${propertyName}.id}")
            } else {
                render('edit', [${propertyName}: ${propertyName}])
            }
        }
    }

    def delete() {
        ${simpleName} ${propertyName} = ${simpleName}.get(params.id)
        ${propertyName}.delete()
        redirect("../index")
    }
}


