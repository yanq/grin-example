plugins {
    id 'com.bertramlabs.asset-pipeline' version '3.0.6'
    id 'java'
    id 'groovy'
    id 'application'
}

group 'xyz.itbang'
version '0.1'

sourceCompatibility = 1.8
mainClassName = "Application"

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}

dependencies {
    compile project(':gun')
    // compile fileTree(dir: 'libs', include: '*.jar')
    compile 'org.codehaus.groovy:groovy-all:2.5.15'
    compile 'io.undertow:undertow-servlet:2.2.14.Final'
    compile 'org.thymeleaf:thymeleaf:3.0.14.RELEASE'

    compile 'com.alibaba:druid:1.2.8'
    compile 'com.zaxxer:HikariCP:5.0.1'
    compile 'org.postgresql:postgresql:42.3.1'

    runtime 'org.slf4j:slf4j-api:1.7.35'
    runtime 'ch.qos.logback:logback-classic:1.2.10'

    testCompile group: 'junit', name: 'junit', version: '4.13.2'
}

// ---  Gun ---
sourceSets {
    main {
        groovy {
            srcDir "gun-app/domains"
            srcDir "gun-app/controllers"
            srcDir "gun-app/websockets"
            srcDir "gun-app/views"
            srcDir "gun-app/scripts"
            srcDir "gun-app/init"
        }
        resources {
            srcDir "gun-app/conf"
        }
    }
}

//运行 Gun 提供的内部命令
task gun(type: JavaExec) {
    group 'gun'
    setStandardInput(System.in)
    jvmArgs('-Dfile.encoding=UTF-8')
    classpath = sourceSets.main.runtimeClasspath
    main = 'gun.app.GunMain'
}

// 部署运行准备，把编译后的文件，放到特定文件夹下
task prepare(type: Copy) {
    group 'gun'
    dependsOn classes, assetCompile
    into "$buildDir/gun"
    from sourceSets.main.runtimeClasspath
}

// 复制 Gun 框架类库过来
task copyLibs(type: Copy) {
    group 'gun'
    from '/Users/yan/projects/gun-dev/gun/build/libs/'
    into "libs"
}

// assets 配置
assets {
    assetsPath = "gun-app/assets"
    // includes = []
    // excludes = ['**/*.less'] //Example Exclude GLOB pattern
    // from '/vendor/lib'
}
// --- Gun ---